# ABSTRACT: Compilation and test targets
#
# make help
#
.PHONY: all build compile clean test test help

CONTAINER ?= wkt2geojson

GCC_FLAGS = -Wall \
          -Wextra \
		  -Wpedantic \
          -Wformat=2 \
		  -Wno-unused-parameter \
		  -Wshadow \
          -Wwrite-strings \
		  -Wstrict-prototypes \
		  -Wold-style-definition \
          -Wredundant-decls \
		  -Wnested-externs \
		  -Wmissing-include-dirs \
		  -Wjump-misses-init \
		  -Wunused \
		  -Wlogical-op \
		  -Wconversion \
		  -Wduplicated-branches \
		  -Wduplicated-cond \
		  -Wfloat-equal \
		  -Winit-self \
		  -O2 \
		  -g


# target: all - Default target that runs the build target
all: build


# target: build - Run the clean and the compile targets
build: clean compile


# target: clean - Remove files generated by old compilation
clean:
	rm -f ./lex.yy.c
	rm -f ./wkt2geojson.tab.h
	rm -f ./wkt2geojson.tab.c
	rm -f $(APP_ROOT_DIR)/application/bin/wkt2geojson


# target: compile - Compile the `wkt2geojson` transpiler
compile: lex.yy.c wkt2geojson.tab.h
	gcc $(GCC_FLAGS) \
		-o $(APP_ROOT_DIR)/application/bin/wkt2geojson \
		wkt2geojson.c \
		wkt2geojson.tab.c \
		lex.yy.c \
		gjs.c

	chmod 0755 $(APP_ROOT_DIR)/application/bin/wkt2geojson


# Generate the `wkt2geojson` scanner
lex.yy.c:
	flex wkt2geojson.l


# Generate the `wkt2geojson` parser
wkt2geojson.tab.h:
	bison --debug -Wcounterexamples -d wkt2geojson.y


# target: test - Compile the `test` program and run into a Valgrind sandbox for testing
test: clean lex.yy.c wkt2geojson.tab.h
	rm -f $(APP_ROOT_DIR)/tmp/test.log
	rm -f $(APP_ROOT_DIR)/tmp/test.json

	gcc $(GCC_FLAGS) \
		-o $(APP_ROOT_DIR)/application/bin/test \
		wkt2geojson.c \
		wkt2geojson.tab.c \
		lex.yy.c \
		gjs.c

	$(APP_ROOT_DIR)/application/bin/test

	valgrind --trace-children=yes \
		--track-fds=yes \
		--track-origins=yes \
		--leak-check=full \
		--show-leak-kinds=all \
		$(APP_ROOT_DIR)/application/bin/test \
		$(APP_ROOT_DIR)/application/samples/wkt/ex1 \
		$(APP_ROOT_DIR)/tmp/test.log \
		$(APP_ROOT_DIR)/tmp/test.json

test2:
	flex wkt2geojson.l
	#bison -d -Wcounterexamples wkt2geojson.y
	bison -d wkt2geojson.y
	gcc -o wkt_parser wkt2geojson.tab.c lex.yy.c -lfl


# target: help - Mostra os targets que sao executaveis
help:
	@egrep "^# target:" [Mm]akefile


# EOF                 